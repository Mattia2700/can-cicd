# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run all

on:
  workflow_dispatch:
  push:
    paths:
    - 'networks/**'
    branches:
      - master

jobs:
  run-all:
    runs-on: ubuntu-latest
    env:
      INCLUDES_VERSION: 0
    steps:
    - uses: actions/setup-python@v2
      name: Set up Python 3.8
      with:
        python-version: 3.8
    - uses: actions/checkout@v2
    - name: Run ID generator
      run: |
        cd id_generator
        pip install -r requirements.txt
        python main.py
        mkdir -p /tmp/workspace/id_generator/ && cp -R out/* /tmp/workspace/id_generator/
    - name: Naked generator
      run: |
        cd naked_generator
        pip install -r requirements.txt
        python main.py
        mkdir -p /tmp/workspace/naked_generator/ && cp -R out/* /tmp/workspace/naked_generator/
        # TESTS
        python -m tests.test_all
    - name: Run Includes generator
      run: |
        cd includes_generator
        pip install -r requirements.txt
        python main.py
        mkdir -p /tmp/workspace/includes_generator/ && cp -R out/* /tmp/workspace/includes_generator/
    - name: Sheet generator
      run: |
        cd sheet_generator
        pip install -r requirements.txt
        python main.py
        mkdir -p /tmp/workspace/sheet_generator/ && cp -R out/* /tmp/workspace/sheet_generator/
    - name: Include external tools
      run: |
        # flatcc
        wget -O /tmp/flatcv0.6.0.tar.gz https://github.com/dvidelabs/flatcc/archive/v0.6.0.tar.gz
        tar -xvf /tmp/flatcv0.6.0.tar.gz flatcc-0.6.0/include flatcc-0.6.0/src/runtime

        mkdir -p /tmp/workspace/external
        cp -r flatcc-0.6.0/include/flatcc /tmp/workspace/external/
        cp -r flatcc-0.6.0/src/runtime /tmp/workspace/external/flatcc/

        ## remove useless stdlib include with flatcc
        rm -r /tmp/workspace/external/flatcc/portable/include
        
        cp flatbuf_generator/fix_flatcc.py /tmp/workspace/external/
        cd /tmp/workspace/external/
        python fix_flatcc.py ./flatcc
        rm fix_flatcc.py
    - uses: actions/checkout@v2
      with:
        ref: build
    - name: Push generated includes
      run: |
        git config --global user.name 'Automated CICD'
        git config --global user.email noreply@noone.com
        git rm -r --ignore-unmatch */*
        cp -r /tmp/workspace/* .
        git add .
        if [[ $(git status --porcelain) ]]; then git commit -am "Automatically generated files" && git push; fi
