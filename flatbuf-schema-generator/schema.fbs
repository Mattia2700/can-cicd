
enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct ENC_L_FROM_ACU {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct ENC_R_FROM_ACU {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct ENC_C_FROM_ACU {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct PEDALS_FROM_ATC {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct PEDALS_FROM_ACU {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct HV_VOLT {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct HV_TEMP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct HV_CURR_ERR_WARN {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct LV_STATUS {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct LV_STATUS_JUDGE {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct INV_R_TEMP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct INV_L_TEMP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct MOT_R_TEMP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct MOT_L_TEMP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct CAL_SET_MIN_MAX {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct CAL_RESP {
	current: uint16;
	status: Status;
}

enum Status : byte { OFF, PRECHARGE, ON, FATAL }
struct ENC_L_FROM_ACU {
	current: uint16;
	status: Status;
}

