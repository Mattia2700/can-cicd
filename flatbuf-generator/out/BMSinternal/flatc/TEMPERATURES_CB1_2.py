# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TEMPERATURES_CB1_2(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 4

    # TEMPERATURES_CB1_2
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TEMPERATURES_CB1_2
    def Temperature16(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # TEMPERATURES_CB1_2
    def Temperature17(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(1))
    # TEMPERATURES_CB1_2
    def MaxTemperature(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # TEMPERATURES_CB1_2
    def MinTemperature(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(3))

def CreateTEMPERATURES_CB1_2(builder, temperature16, temperature17, maxTemperature, minTemperature):
    builder.Prep(1, 4)
    builder.PrependUint8(minTemperature)
    builder.PrependUint8(maxTemperature)
    builder.PrependUint8(temperature17)
    builder.PrependUint8(temperature16)
    return builder.Offset()
