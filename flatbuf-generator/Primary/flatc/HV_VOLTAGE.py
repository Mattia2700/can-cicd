# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HV_VOLTAGE(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # HV_VOLTAGE
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HV_VOLTAGE
    def PackVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # HV_VOLTAGE
    def BusVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # HV_VOLTAGE
    def MaxCellVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # HV_VOLTAGE
    def MinCellVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))

def CreateHV_VOLTAGE(builder, packVoltage, busVoltage, maxCellVoltage, minCellVoltage):
    builder.Prep(2, 8)
    builder.PrependUint16(minCellVoltage)
    builder.PrependUint16(maxCellVoltage)
    builder.PrependUint16(busVoltage)
    builder.PrependUint16(packVoltage)
    return builder.Offset()
