# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HV_ERROR(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 3

    # HV_ERROR
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HV_ERROR
    def ErrorCode(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # HV_ERROR
    def ErrorIndex(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(1))
    # HV_ERROR
    def Active(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))

def CreateHV_ERROR(builder, errorCode, errorIndex, active):
    builder.Prep(1, 3)
    builder.PrependUint8(active)
    builder.PrependUint8(errorIndex)
    builder.PrependUint8(errorCode)
    return builder.Offset()
