# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IMU_ANGULAR_RATE(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 6

    # IMU_ANGULAR_RATE
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IMU_ANGULAR_RATE
    def AngRateX(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # IMU_ANGULAR_RATE
    def AngRateY(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # IMU_ANGULAR_RATE
    def AngRateZ(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))

def CreateIMU_ANGULAR_RATE(builder, angRateX, angRateY, angRateZ):
    builder.Prep(2, 6)
    builder.PrependUint16(angRateZ)
    builder.PrependUint16(angRateY)
    builder.PrependUint16(angRateX)
    return builder.Offset()
