# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IMU_ACCELERATION(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 6

    # IMU_ACCELERATION
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IMU_ACCELERATION
    def AccelX(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # IMU_ACCELERATION
    def AccelY(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # IMU_ACCELERATION
    def AccelZ(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))

def CreateIMU_ACCELERATION(builder, accelX, accelY, accelZ):
    builder.Prep(2, 6)
    builder.PrependUint16(accelZ)
    builder.PrependUint16(accelY)
    builder.PrependUint16(accelX)
    return builder.Offset()
