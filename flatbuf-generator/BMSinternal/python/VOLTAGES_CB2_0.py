# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VOLTAGES_CB2_0(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # VOLTAGES_CB2_0
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VOLTAGES_CB2_0
    def Voltage0(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # VOLTAGES_CB2_0
    def Voltage1(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # VOLTAGES_CB2_0
    def Voltage2(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # VOLTAGES_CB2_0
    def Voltage3(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))

def CreateVOLTAGES_CB2_0(builder, voltage0, voltage1, voltage2, voltage3):
    builder.Prep(2, 8)
    builder.PrependUint16(voltage3)
    builder.PrependUint16(voltage2)
    builder.PrependUint16(voltage1)
    builder.PrependUint16(voltage0)
    return builder.Offset()
