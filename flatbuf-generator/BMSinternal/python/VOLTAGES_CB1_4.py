# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VOLTAGES_CB1_4(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # VOLTAGES_CB1_4
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VOLTAGES_CB1_4
    def Voltage16(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # VOLTAGES_CB1_4
    def Voltage17(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # VOLTAGES_CB1_4
    def MaxVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # VOLTAGES_CB1_4
    def MinVoltage(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))

def CreateVOLTAGES_CB1_4(builder, voltage16, voltage17, maxVoltage, minVoltage):
    builder.Prep(2, 8)
    builder.PrependUint16(minVoltage)
    builder.PrependUint16(maxVoltage)
    builder.PrependUint16(voltage17)
    builder.PrependUint16(voltage16)
    return builder.Offset()
