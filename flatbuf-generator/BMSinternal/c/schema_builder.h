#ifndef SCHEMA_BUILDER_H
#define SCHEMA_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef SCHEMA_READER_H
#include "schema_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

#define __VOLTAGES_CB0_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB0_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_assign(VOLTAGES_CB0_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_copy(VOLTAGES_CB0_0_t *p, const VOLTAGES_CB0_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_assign_to_pe(VOLTAGES_CB0_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_copy_to_pe(VOLTAGES_CB0_0_t *p, const VOLTAGES_CB0_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_assign_from_pe(VOLTAGES_CB0_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB0_0_t *VOLTAGES_CB0_0_copy_from_pe(VOLTAGES_CB0_0_t *p, const VOLTAGES_CB0_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB0_0, 8, 2, VOLTAGES_CB0_0_file_identifier, VOLTAGES_CB0_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB0_0, VOLTAGES_CB0_0_t)

#define __VOLTAGES_CB0_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB0_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_assign(VOLTAGES_CB0_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_copy(VOLTAGES_CB0_1_t *p, const VOLTAGES_CB0_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_assign_to_pe(VOLTAGES_CB0_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_copy_to_pe(VOLTAGES_CB0_1_t *p, const VOLTAGES_CB0_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_assign_from_pe(VOLTAGES_CB0_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB0_1_t *VOLTAGES_CB0_1_copy_from_pe(VOLTAGES_CB0_1_t *p, const VOLTAGES_CB0_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB0_1, 8, 2, VOLTAGES_CB0_1_file_identifier, VOLTAGES_CB0_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB0_1, VOLTAGES_CB0_1_t)

#define __VOLTAGES_CB0_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB0_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_assign(VOLTAGES_CB0_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_copy(VOLTAGES_CB0_2_t *p, const VOLTAGES_CB0_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_assign_to_pe(VOLTAGES_CB0_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_copy_to_pe(VOLTAGES_CB0_2_t *p, const VOLTAGES_CB0_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_assign_from_pe(VOLTAGES_CB0_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB0_2_t *VOLTAGES_CB0_2_copy_from_pe(VOLTAGES_CB0_2_t *p, const VOLTAGES_CB0_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB0_2, 8, 2, VOLTAGES_CB0_2_file_identifier, VOLTAGES_CB0_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB0_2, VOLTAGES_CB0_2_t)

#define __VOLTAGES_CB0_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB0_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_assign(VOLTAGES_CB0_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_copy(VOLTAGES_CB0_3_t *p, const VOLTAGES_CB0_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_assign_to_pe(VOLTAGES_CB0_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_copy_to_pe(VOLTAGES_CB0_3_t *p, const VOLTAGES_CB0_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_assign_from_pe(VOLTAGES_CB0_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB0_3_t *VOLTAGES_CB0_3_copy_from_pe(VOLTAGES_CB0_3_t *p, const VOLTAGES_CB0_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB0_3, 8, 2, VOLTAGES_CB0_3_file_identifier, VOLTAGES_CB0_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB0_3, VOLTAGES_CB0_3_t)

#define __VOLTAGES_CB0_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB0_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_assign(VOLTAGES_CB0_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_copy(VOLTAGES_CB0_4_t *p, const VOLTAGES_CB0_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_assign_to_pe(VOLTAGES_CB0_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_copy_to_pe(VOLTAGES_CB0_4_t *p, const VOLTAGES_CB0_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_assign_from_pe(VOLTAGES_CB0_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB0_4_t *VOLTAGES_CB0_4_copy_from_pe(VOLTAGES_CB0_4_t *p, const VOLTAGES_CB0_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB0_4, 8, 2, VOLTAGES_CB0_4_file_identifier, VOLTAGES_CB0_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB0_4, VOLTAGES_CB0_4_t)

#define __TEMPERATURES_CB0_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB0_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_assign(TEMPERATURES_CB0_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_copy(TEMPERATURES_CB0_0_t *p, const TEMPERATURES_CB0_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_assign_to_pe(TEMPERATURES_CB0_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_copy_to_pe(TEMPERATURES_CB0_0_t *p, const TEMPERATURES_CB0_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_assign_from_pe(TEMPERATURES_CB0_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB0_0_t *TEMPERATURES_CB0_0_copy_from_pe(TEMPERATURES_CB0_0_t *p, const TEMPERATURES_CB0_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB0_0, 8, 1, TEMPERATURES_CB0_0_file_identifier, TEMPERATURES_CB0_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB0_0, TEMPERATURES_CB0_0_t)

#define __TEMPERATURES_CB0_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB0_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_assign(TEMPERATURES_CB0_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_copy(TEMPERATURES_CB0_1_t *p, const TEMPERATURES_CB0_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_assign_to_pe(TEMPERATURES_CB0_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_copy_to_pe(TEMPERATURES_CB0_1_t *p, const TEMPERATURES_CB0_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_assign_from_pe(TEMPERATURES_CB0_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB0_1_t *TEMPERATURES_CB0_1_copy_from_pe(TEMPERATURES_CB0_1_t *p, const TEMPERATURES_CB0_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB0_1, 8, 1, TEMPERATURES_CB0_1_file_identifier, TEMPERATURES_CB0_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB0_1, TEMPERATURES_CB0_1_t)

#define __TEMPERATURES_CB0_2_formal_args , uint8_t v0, uint8_t v1
#define __TEMPERATURES_CB0_2_call_args , v0, v1
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_assign(TEMPERATURES_CB0_2_t *p, uint8_t v0, uint8_t v1)
{ p->temperature16 = v0; p->temperature17 = v1;
  return p; }
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_copy(TEMPERATURES_CB0_2_t *p, const TEMPERATURES_CB0_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17;
  return p; }
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_assign_to_pe(TEMPERATURES_CB0_2_t *p, uint8_t v0, uint8_t v1)
{ p->temperature16 = v0; p->temperature17 = v1;
  return p; }
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_copy_to_pe(TEMPERATURES_CB0_2_t *p, const TEMPERATURES_CB0_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17;
  return p; }
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_assign_from_pe(TEMPERATURES_CB0_2_t *p, uint8_t v0, uint8_t v1)
{ p->temperature16 = v0; p->temperature17 = v1;
  return p; }
static inline TEMPERATURES_CB0_2_t *TEMPERATURES_CB0_2_copy_from_pe(TEMPERATURES_CB0_2_t *p, const TEMPERATURES_CB0_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB0_2, 2, 1, TEMPERATURES_CB0_2_file_identifier, TEMPERATURES_CB0_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB0_2, TEMPERATURES_CB0_2_t)

#define __VOLTAGES_CB1_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB1_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_assign(VOLTAGES_CB1_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_copy(VOLTAGES_CB1_0_t *p, const VOLTAGES_CB1_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_assign_to_pe(VOLTAGES_CB1_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_copy_to_pe(VOLTAGES_CB1_0_t *p, const VOLTAGES_CB1_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_assign_from_pe(VOLTAGES_CB1_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB1_0_t *VOLTAGES_CB1_0_copy_from_pe(VOLTAGES_CB1_0_t *p, const VOLTAGES_CB1_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB1_0, 8, 2, VOLTAGES_CB1_0_file_identifier, VOLTAGES_CB1_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB1_0, VOLTAGES_CB1_0_t)

#define __VOLTAGES_CB1_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB1_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_assign(VOLTAGES_CB1_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_copy(VOLTAGES_CB1_1_t *p, const VOLTAGES_CB1_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_assign_to_pe(VOLTAGES_CB1_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_copy_to_pe(VOLTAGES_CB1_1_t *p, const VOLTAGES_CB1_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_assign_from_pe(VOLTAGES_CB1_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB1_1_t *VOLTAGES_CB1_1_copy_from_pe(VOLTAGES_CB1_1_t *p, const VOLTAGES_CB1_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB1_1, 8, 2, VOLTAGES_CB1_1_file_identifier, VOLTAGES_CB1_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB1_1, VOLTAGES_CB1_1_t)

#define __VOLTAGES_CB1_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB1_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_assign(VOLTAGES_CB1_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_copy(VOLTAGES_CB1_2_t *p, const VOLTAGES_CB1_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_assign_to_pe(VOLTAGES_CB1_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_copy_to_pe(VOLTAGES_CB1_2_t *p, const VOLTAGES_CB1_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_assign_from_pe(VOLTAGES_CB1_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB1_2_t *VOLTAGES_CB1_2_copy_from_pe(VOLTAGES_CB1_2_t *p, const VOLTAGES_CB1_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB1_2, 8, 2, VOLTAGES_CB1_2_file_identifier, VOLTAGES_CB1_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB1_2, VOLTAGES_CB1_2_t)

#define __VOLTAGES_CB1_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB1_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_assign(VOLTAGES_CB1_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_copy(VOLTAGES_CB1_3_t *p, const VOLTAGES_CB1_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_assign_to_pe(VOLTAGES_CB1_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_copy_to_pe(VOLTAGES_CB1_3_t *p, const VOLTAGES_CB1_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_assign_from_pe(VOLTAGES_CB1_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB1_3_t *VOLTAGES_CB1_3_copy_from_pe(VOLTAGES_CB1_3_t *p, const VOLTAGES_CB1_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB1_3, 8, 2, VOLTAGES_CB1_3_file_identifier, VOLTAGES_CB1_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB1_3, VOLTAGES_CB1_3_t)

#define __VOLTAGES_CB1_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB1_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_assign(VOLTAGES_CB1_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_copy(VOLTAGES_CB1_4_t *p, const VOLTAGES_CB1_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_assign_to_pe(VOLTAGES_CB1_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_copy_to_pe(VOLTAGES_CB1_4_t *p, const VOLTAGES_CB1_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_assign_from_pe(VOLTAGES_CB1_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB1_4_t *VOLTAGES_CB1_4_copy_from_pe(VOLTAGES_CB1_4_t *p, const VOLTAGES_CB1_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB1_4, 8, 2, VOLTAGES_CB1_4_file_identifier, VOLTAGES_CB1_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB1_4, VOLTAGES_CB1_4_t)

#define __TEMPERATURES_CB1_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB1_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_assign(TEMPERATURES_CB1_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_copy(TEMPERATURES_CB1_0_t *p, const TEMPERATURES_CB1_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_assign_to_pe(TEMPERATURES_CB1_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_copy_to_pe(TEMPERATURES_CB1_0_t *p, const TEMPERATURES_CB1_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_assign_from_pe(TEMPERATURES_CB1_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB1_0_t *TEMPERATURES_CB1_0_copy_from_pe(TEMPERATURES_CB1_0_t *p, const TEMPERATURES_CB1_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB1_0, 8, 1, TEMPERATURES_CB1_0_file_identifier, TEMPERATURES_CB1_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB1_0, TEMPERATURES_CB1_0_t)

#define __TEMPERATURES_CB1_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB1_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_assign(TEMPERATURES_CB1_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_copy(TEMPERATURES_CB1_1_t *p, const TEMPERATURES_CB1_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_assign_to_pe(TEMPERATURES_CB1_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_copy_to_pe(TEMPERATURES_CB1_1_t *p, const TEMPERATURES_CB1_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_assign_from_pe(TEMPERATURES_CB1_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB1_1_t *TEMPERATURES_CB1_1_copy_from_pe(TEMPERATURES_CB1_1_t *p, const TEMPERATURES_CB1_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB1_1, 8, 1, TEMPERATURES_CB1_1_file_identifier, TEMPERATURES_CB1_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB1_1, TEMPERATURES_CB1_1_t)

#define __TEMPERATURES_CB1_2_formal_args , uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3
#define __TEMPERATURES_CB1_2_call_args , v0, v1, v2, v3
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_assign(TEMPERATURES_CB1_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_copy(TEMPERATURES_CB1_2_t *p, const TEMPERATURES_CB1_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_assign_to_pe(TEMPERATURES_CB1_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_copy_to_pe(TEMPERATURES_CB1_2_t *p, const TEMPERATURES_CB1_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_assign_from_pe(TEMPERATURES_CB1_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB1_2_t *TEMPERATURES_CB1_2_copy_from_pe(TEMPERATURES_CB1_2_t *p, const TEMPERATURES_CB1_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB1_2, 4, 1, TEMPERATURES_CB1_2_file_identifier, TEMPERATURES_CB1_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB1_2, TEMPERATURES_CB1_2_t)

#define __VOLTAGES_CB2_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB2_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_assign(VOLTAGES_CB2_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_copy(VOLTAGES_CB2_0_t *p, const VOLTAGES_CB2_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_assign_to_pe(VOLTAGES_CB2_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_copy_to_pe(VOLTAGES_CB2_0_t *p, const VOLTAGES_CB2_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_assign_from_pe(VOLTAGES_CB2_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB2_0_t *VOLTAGES_CB2_0_copy_from_pe(VOLTAGES_CB2_0_t *p, const VOLTAGES_CB2_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB2_0, 8, 2, VOLTAGES_CB2_0_file_identifier, VOLTAGES_CB2_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB2_0, VOLTAGES_CB2_0_t)

#define __VOLTAGES_CB2_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB2_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_assign(VOLTAGES_CB2_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_copy(VOLTAGES_CB2_1_t *p, const VOLTAGES_CB2_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_assign_to_pe(VOLTAGES_CB2_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_copy_to_pe(VOLTAGES_CB2_1_t *p, const VOLTAGES_CB2_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_assign_from_pe(VOLTAGES_CB2_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB2_1_t *VOLTAGES_CB2_1_copy_from_pe(VOLTAGES_CB2_1_t *p, const VOLTAGES_CB2_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB2_1, 8, 2, VOLTAGES_CB2_1_file_identifier, VOLTAGES_CB2_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB2_1, VOLTAGES_CB2_1_t)

#define __VOLTAGES_CB2_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB2_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_assign(VOLTAGES_CB2_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_copy(VOLTAGES_CB2_2_t *p, const VOLTAGES_CB2_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_assign_to_pe(VOLTAGES_CB2_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_copy_to_pe(VOLTAGES_CB2_2_t *p, const VOLTAGES_CB2_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_assign_from_pe(VOLTAGES_CB2_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB2_2_t *VOLTAGES_CB2_2_copy_from_pe(VOLTAGES_CB2_2_t *p, const VOLTAGES_CB2_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB2_2, 8, 2, VOLTAGES_CB2_2_file_identifier, VOLTAGES_CB2_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB2_2, VOLTAGES_CB2_2_t)

#define __VOLTAGES_CB2_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB2_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_assign(VOLTAGES_CB2_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_copy(VOLTAGES_CB2_3_t *p, const VOLTAGES_CB2_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_assign_to_pe(VOLTAGES_CB2_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_copy_to_pe(VOLTAGES_CB2_3_t *p, const VOLTAGES_CB2_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_assign_from_pe(VOLTAGES_CB2_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB2_3_t *VOLTAGES_CB2_3_copy_from_pe(VOLTAGES_CB2_3_t *p, const VOLTAGES_CB2_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB2_3, 8, 2, VOLTAGES_CB2_3_file_identifier, VOLTAGES_CB2_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB2_3, VOLTAGES_CB2_3_t)

#define __VOLTAGES_CB2_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB2_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_assign(VOLTAGES_CB2_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_copy(VOLTAGES_CB2_4_t *p, const VOLTAGES_CB2_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_assign_to_pe(VOLTAGES_CB2_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_copy_to_pe(VOLTAGES_CB2_4_t *p, const VOLTAGES_CB2_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_assign_from_pe(VOLTAGES_CB2_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB2_4_t *VOLTAGES_CB2_4_copy_from_pe(VOLTAGES_CB2_4_t *p, const VOLTAGES_CB2_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB2_4, 8, 2, VOLTAGES_CB2_4_file_identifier, VOLTAGES_CB2_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB2_4, VOLTAGES_CB2_4_t)

#define __TEMPERATURES_CB2_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB2_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_assign(TEMPERATURES_CB2_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_copy(TEMPERATURES_CB2_0_t *p, const TEMPERATURES_CB2_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_assign_to_pe(TEMPERATURES_CB2_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_copy_to_pe(TEMPERATURES_CB2_0_t *p, const TEMPERATURES_CB2_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_assign_from_pe(TEMPERATURES_CB2_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB2_0_t *TEMPERATURES_CB2_0_copy_from_pe(TEMPERATURES_CB2_0_t *p, const TEMPERATURES_CB2_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB2_0, 8, 1, TEMPERATURES_CB2_0_file_identifier, TEMPERATURES_CB2_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB2_0, TEMPERATURES_CB2_0_t)

#define __TEMPERATURES_CB2_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB2_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_assign(TEMPERATURES_CB2_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_copy(TEMPERATURES_CB2_1_t *p, const TEMPERATURES_CB2_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_assign_to_pe(TEMPERATURES_CB2_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_copy_to_pe(TEMPERATURES_CB2_1_t *p, const TEMPERATURES_CB2_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_assign_from_pe(TEMPERATURES_CB2_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB2_1_t *TEMPERATURES_CB2_1_copy_from_pe(TEMPERATURES_CB2_1_t *p, const TEMPERATURES_CB2_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB2_1, 8, 1, TEMPERATURES_CB2_1_file_identifier, TEMPERATURES_CB2_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB2_1, TEMPERATURES_CB2_1_t)

#define __TEMPERATURES_CB2_2_formal_args , uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3
#define __TEMPERATURES_CB2_2_call_args , v0, v1, v2, v3
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_assign(TEMPERATURES_CB2_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_copy(TEMPERATURES_CB2_2_t *p, const TEMPERATURES_CB2_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_assign_to_pe(TEMPERATURES_CB2_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_copy_to_pe(TEMPERATURES_CB2_2_t *p, const TEMPERATURES_CB2_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_assign_from_pe(TEMPERATURES_CB2_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB2_2_t *TEMPERATURES_CB2_2_copy_from_pe(TEMPERATURES_CB2_2_t *p, const TEMPERATURES_CB2_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB2_2, 4, 1, TEMPERATURES_CB2_2_file_identifier, TEMPERATURES_CB2_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB2_2, TEMPERATURES_CB2_2_t)

#define __VOLTAGES_CB3_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB3_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_assign(VOLTAGES_CB3_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_copy(VOLTAGES_CB3_0_t *p, const VOLTAGES_CB3_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_assign_to_pe(VOLTAGES_CB3_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_copy_to_pe(VOLTAGES_CB3_0_t *p, const VOLTAGES_CB3_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_assign_from_pe(VOLTAGES_CB3_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB3_0_t *VOLTAGES_CB3_0_copy_from_pe(VOLTAGES_CB3_0_t *p, const VOLTAGES_CB3_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB3_0, 8, 2, VOLTAGES_CB3_0_file_identifier, VOLTAGES_CB3_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB3_0, VOLTAGES_CB3_0_t)

#define __VOLTAGES_CB3_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB3_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_assign(VOLTAGES_CB3_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_copy(VOLTAGES_CB3_1_t *p, const VOLTAGES_CB3_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_assign_to_pe(VOLTAGES_CB3_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_copy_to_pe(VOLTAGES_CB3_1_t *p, const VOLTAGES_CB3_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_assign_from_pe(VOLTAGES_CB3_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB3_1_t *VOLTAGES_CB3_1_copy_from_pe(VOLTAGES_CB3_1_t *p, const VOLTAGES_CB3_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB3_1, 8, 2, VOLTAGES_CB3_1_file_identifier, VOLTAGES_CB3_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB3_1, VOLTAGES_CB3_1_t)

#define __VOLTAGES_CB3_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB3_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_assign(VOLTAGES_CB3_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_copy(VOLTAGES_CB3_2_t *p, const VOLTAGES_CB3_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_assign_to_pe(VOLTAGES_CB3_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_copy_to_pe(VOLTAGES_CB3_2_t *p, const VOLTAGES_CB3_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_assign_from_pe(VOLTAGES_CB3_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB3_2_t *VOLTAGES_CB3_2_copy_from_pe(VOLTAGES_CB3_2_t *p, const VOLTAGES_CB3_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB3_2, 8, 2, VOLTAGES_CB3_2_file_identifier, VOLTAGES_CB3_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB3_2, VOLTAGES_CB3_2_t)

#define __VOLTAGES_CB3_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB3_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_assign(VOLTAGES_CB3_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_copy(VOLTAGES_CB3_3_t *p, const VOLTAGES_CB3_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_assign_to_pe(VOLTAGES_CB3_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_copy_to_pe(VOLTAGES_CB3_3_t *p, const VOLTAGES_CB3_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_assign_from_pe(VOLTAGES_CB3_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB3_3_t *VOLTAGES_CB3_3_copy_from_pe(VOLTAGES_CB3_3_t *p, const VOLTAGES_CB3_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB3_3, 8, 2, VOLTAGES_CB3_3_file_identifier, VOLTAGES_CB3_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB3_3, VOLTAGES_CB3_3_t)

#define __VOLTAGES_CB3_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB3_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_assign(VOLTAGES_CB3_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_copy(VOLTAGES_CB3_4_t *p, const VOLTAGES_CB3_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_assign_to_pe(VOLTAGES_CB3_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_copy_to_pe(VOLTAGES_CB3_4_t *p, const VOLTAGES_CB3_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_assign_from_pe(VOLTAGES_CB3_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB3_4_t *VOLTAGES_CB3_4_copy_from_pe(VOLTAGES_CB3_4_t *p, const VOLTAGES_CB3_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB3_4, 8, 2, VOLTAGES_CB3_4_file_identifier, VOLTAGES_CB3_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB3_4, VOLTAGES_CB3_4_t)

#define __TEMPERATURES_CB3_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB3_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_assign(TEMPERATURES_CB3_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_copy(TEMPERATURES_CB3_0_t *p, const TEMPERATURES_CB3_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_assign_to_pe(TEMPERATURES_CB3_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_copy_to_pe(TEMPERATURES_CB3_0_t *p, const TEMPERATURES_CB3_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_assign_from_pe(TEMPERATURES_CB3_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB3_0_t *TEMPERATURES_CB3_0_copy_from_pe(TEMPERATURES_CB3_0_t *p, const TEMPERATURES_CB3_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB3_0, 8, 1, TEMPERATURES_CB3_0_file_identifier, TEMPERATURES_CB3_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB3_0, TEMPERATURES_CB3_0_t)

#define __TEMPERATURES_CB3_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB3_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_assign(TEMPERATURES_CB3_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_copy(TEMPERATURES_CB3_1_t *p, const TEMPERATURES_CB3_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_assign_to_pe(TEMPERATURES_CB3_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_copy_to_pe(TEMPERATURES_CB3_1_t *p, const TEMPERATURES_CB3_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_assign_from_pe(TEMPERATURES_CB3_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB3_1_t *TEMPERATURES_CB3_1_copy_from_pe(TEMPERATURES_CB3_1_t *p, const TEMPERATURES_CB3_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB3_1, 8, 1, TEMPERATURES_CB3_1_file_identifier, TEMPERATURES_CB3_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB3_1, TEMPERATURES_CB3_1_t)

#define __TEMPERATURES_CB3_2_formal_args , uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3
#define __TEMPERATURES_CB3_2_call_args , v0, v1, v2, v3
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_assign(TEMPERATURES_CB3_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_copy(TEMPERATURES_CB3_2_t *p, const TEMPERATURES_CB3_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_assign_to_pe(TEMPERATURES_CB3_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_copy_to_pe(TEMPERATURES_CB3_2_t *p, const TEMPERATURES_CB3_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_assign_from_pe(TEMPERATURES_CB3_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB3_2_t *TEMPERATURES_CB3_2_copy_from_pe(TEMPERATURES_CB3_2_t *p, const TEMPERATURES_CB3_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB3_2, 4, 1, TEMPERATURES_CB3_2_file_identifier, TEMPERATURES_CB3_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB3_2, TEMPERATURES_CB3_2_t)

#define __VOLTAGES_CB4_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB4_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_assign(VOLTAGES_CB4_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_copy(VOLTAGES_CB4_0_t *p, const VOLTAGES_CB4_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_assign_to_pe(VOLTAGES_CB4_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_copy_to_pe(VOLTAGES_CB4_0_t *p, const VOLTAGES_CB4_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_assign_from_pe(VOLTAGES_CB4_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB4_0_t *VOLTAGES_CB4_0_copy_from_pe(VOLTAGES_CB4_0_t *p, const VOLTAGES_CB4_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB4_0, 8, 2, VOLTAGES_CB4_0_file_identifier, VOLTAGES_CB4_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB4_0, VOLTAGES_CB4_0_t)

#define __VOLTAGES_CB4_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB4_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_assign(VOLTAGES_CB4_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_copy(VOLTAGES_CB4_1_t *p, const VOLTAGES_CB4_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_assign_to_pe(VOLTAGES_CB4_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_copy_to_pe(VOLTAGES_CB4_1_t *p, const VOLTAGES_CB4_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_assign_from_pe(VOLTAGES_CB4_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB4_1_t *VOLTAGES_CB4_1_copy_from_pe(VOLTAGES_CB4_1_t *p, const VOLTAGES_CB4_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB4_1, 8, 2, VOLTAGES_CB4_1_file_identifier, VOLTAGES_CB4_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB4_1, VOLTAGES_CB4_1_t)

#define __VOLTAGES_CB4_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB4_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_assign(VOLTAGES_CB4_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_copy(VOLTAGES_CB4_2_t *p, const VOLTAGES_CB4_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_assign_to_pe(VOLTAGES_CB4_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_copy_to_pe(VOLTAGES_CB4_2_t *p, const VOLTAGES_CB4_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_assign_from_pe(VOLTAGES_CB4_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB4_2_t *VOLTAGES_CB4_2_copy_from_pe(VOLTAGES_CB4_2_t *p, const VOLTAGES_CB4_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB4_2, 8, 2, VOLTAGES_CB4_2_file_identifier, VOLTAGES_CB4_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB4_2, VOLTAGES_CB4_2_t)

#define __VOLTAGES_CB4_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB4_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_assign(VOLTAGES_CB4_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_copy(VOLTAGES_CB4_3_t *p, const VOLTAGES_CB4_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_assign_to_pe(VOLTAGES_CB4_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_copy_to_pe(VOLTAGES_CB4_3_t *p, const VOLTAGES_CB4_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_assign_from_pe(VOLTAGES_CB4_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB4_3_t *VOLTAGES_CB4_3_copy_from_pe(VOLTAGES_CB4_3_t *p, const VOLTAGES_CB4_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB4_3, 8, 2, VOLTAGES_CB4_3_file_identifier, VOLTAGES_CB4_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB4_3, VOLTAGES_CB4_3_t)

#define __VOLTAGES_CB4_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB4_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_assign(VOLTAGES_CB4_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_copy(VOLTAGES_CB4_4_t *p, const VOLTAGES_CB4_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_assign_to_pe(VOLTAGES_CB4_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_copy_to_pe(VOLTAGES_CB4_4_t *p, const VOLTAGES_CB4_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_assign_from_pe(VOLTAGES_CB4_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB4_4_t *VOLTAGES_CB4_4_copy_from_pe(VOLTAGES_CB4_4_t *p, const VOLTAGES_CB4_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB4_4, 8, 2, VOLTAGES_CB4_4_file_identifier, VOLTAGES_CB4_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB4_4, VOLTAGES_CB4_4_t)

#define __TEMPERATURES_CB4_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB4_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_assign(TEMPERATURES_CB4_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_copy(TEMPERATURES_CB4_0_t *p, const TEMPERATURES_CB4_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_assign_to_pe(TEMPERATURES_CB4_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_copy_to_pe(TEMPERATURES_CB4_0_t *p, const TEMPERATURES_CB4_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_assign_from_pe(TEMPERATURES_CB4_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB4_0_t *TEMPERATURES_CB4_0_copy_from_pe(TEMPERATURES_CB4_0_t *p, const TEMPERATURES_CB4_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB4_0, 8, 1, TEMPERATURES_CB4_0_file_identifier, TEMPERATURES_CB4_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB4_0, TEMPERATURES_CB4_0_t)

#define __TEMPERATURES_CB4_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB4_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_assign(TEMPERATURES_CB4_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_copy(TEMPERATURES_CB4_1_t *p, const TEMPERATURES_CB4_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_assign_to_pe(TEMPERATURES_CB4_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_copy_to_pe(TEMPERATURES_CB4_1_t *p, const TEMPERATURES_CB4_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_assign_from_pe(TEMPERATURES_CB4_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB4_1_t *TEMPERATURES_CB4_1_copy_from_pe(TEMPERATURES_CB4_1_t *p, const TEMPERATURES_CB4_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB4_1, 8, 1, TEMPERATURES_CB4_1_file_identifier, TEMPERATURES_CB4_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB4_1, TEMPERATURES_CB4_1_t)

#define __TEMPERATURES_CB4_2_formal_args , uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3
#define __TEMPERATURES_CB4_2_call_args , v0, v1, v2, v3
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_assign(TEMPERATURES_CB4_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_copy(TEMPERATURES_CB4_2_t *p, const TEMPERATURES_CB4_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_assign_to_pe(TEMPERATURES_CB4_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_copy_to_pe(TEMPERATURES_CB4_2_t *p, const TEMPERATURES_CB4_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_assign_from_pe(TEMPERATURES_CB4_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB4_2_t *TEMPERATURES_CB4_2_copy_from_pe(TEMPERATURES_CB4_2_t *p, const TEMPERATURES_CB4_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB4_2, 4, 1, TEMPERATURES_CB4_2_file_identifier, TEMPERATURES_CB4_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB4_2, TEMPERATURES_CB4_2_t)

#define __VOLTAGES_CB5_0_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB5_0_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_assign(VOLTAGES_CB5_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage0 = v0; p->voltage1 = v1; p->voltage2 = v2; p->voltage3 = v3;
  return p; }
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_copy(VOLTAGES_CB5_0_t *p, const VOLTAGES_CB5_0_t *p2)
{ p->voltage0 = p2->voltage0; p->voltage1 = p2->voltage1; p->voltage2 = p2->voltage2; p->voltage3 = p2->voltage3;
  return p; }
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_assign_to_pe(VOLTAGES_CB5_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage0, v0); flatbuffers_uint16_assign_to_pe(&p->voltage1, v1); flatbuffers_uint16_assign_to_pe(&p->voltage2, v2); flatbuffers_uint16_assign_to_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_copy_to_pe(VOLTAGES_CB5_0_t *p, const VOLTAGES_CB5_0_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_to_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_to_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_to_pe(&p->voltage3, &p2->voltage3);
  return p; }
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_assign_from_pe(VOLTAGES_CB5_0_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage0, v0); flatbuffers_uint16_assign_from_pe(&p->voltage1, v1); flatbuffers_uint16_assign_from_pe(&p->voltage2, v2); flatbuffers_uint16_assign_from_pe(&p->voltage3, v3);
  return p; }
static inline VOLTAGES_CB5_0_t *VOLTAGES_CB5_0_copy_from_pe(VOLTAGES_CB5_0_t *p, const VOLTAGES_CB5_0_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage0, &p2->voltage0); flatbuffers_uint16_copy_from_pe(&p->voltage1, &p2->voltage1); flatbuffers_uint16_copy_from_pe(&p->voltage2, &p2->voltage2); flatbuffers_uint16_copy_from_pe(&p->voltage3, &p2->voltage3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB5_0, 8, 2, VOLTAGES_CB5_0_file_identifier, VOLTAGES_CB5_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB5_0, VOLTAGES_CB5_0_t)

#define __VOLTAGES_CB5_1_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB5_1_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_assign(VOLTAGES_CB5_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage4 = v0; p->voltage5 = v1; p->voltage6 = v2; p->voltage7 = v3;
  return p; }
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_copy(VOLTAGES_CB5_1_t *p, const VOLTAGES_CB5_1_t *p2)
{ p->voltage4 = p2->voltage4; p->voltage5 = p2->voltage5; p->voltage6 = p2->voltage6; p->voltage7 = p2->voltage7;
  return p; }
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_assign_to_pe(VOLTAGES_CB5_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage4, v0); flatbuffers_uint16_assign_to_pe(&p->voltage5, v1); flatbuffers_uint16_assign_to_pe(&p->voltage6, v2); flatbuffers_uint16_assign_to_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_copy_to_pe(VOLTAGES_CB5_1_t *p, const VOLTAGES_CB5_1_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_to_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_to_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_to_pe(&p->voltage7, &p2->voltage7);
  return p; }
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_assign_from_pe(VOLTAGES_CB5_1_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage4, v0); flatbuffers_uint16_assign_from_pe(&p->voltage5, v1); flatbuffers_uint16_assign_from_pe(&p->voltage6, v2); flatbuffers_uint16_assign_from_pe(&p->voltage7, v3);
  return p; }
static inline VOLTAGES_CB5_1_t *VOLTAGES_CB5_1_copy_from_pe(VOLTAGES_CB5_1_t *p, const VOLTAGES_CB5_1_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage4, &p2->voltage4); flatbuffers_uint16_copy_from_pe(&p->voltage5, &p2->voltage5); flatbuffers_uint16_copy_from_pe(&p->voltage6, &p2->voltage6); flatbuffers_uint16_copy_from_pe(&p->voltage7, &p2->voltage7);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB5_1, 8, 2, VOLTAGES_CB5_1_file_identifier, VOLTAGES_CB5_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB5_1, VOLTAGES_CB5_1_t)

#define __VOLTAGES_CB5_2_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB5_2_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_assign(VOLTAGES_CB5_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage8 = v0; p->voltage9 = v1; p->voltage10 = v2; p->voltage11 = v3;
  return p; }
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_copy(VOLTAGES_CB5_2_t *p, const VOLTAGES_CB5_2_t *p2)
{ p->voltage8 = p2->voltage8; p->voltage9 = p2->voltage9; p->voltage10 = p2->voltage10; p->voltage11 = p2->voltage11;
  return p; }
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_assign_to_pe(VOLTAGES_CB5_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage8, v0); flatbuffers_uint16_assign_to_pe(&p->voltage9, v1); flatbuffers_uint16_assign_to_pe(&p->voltage10, v2); flatbuffers_uint16_assign_to_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_copy_to_pe(VOLTAGES_CB5_2_t *p, const VOLTAGES_CB5_2_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_to_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_to_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_to_pe(&p->voltage11, &p2->voltage11);
  return p; }
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_assign_from_pe(VOLTAGES_CB5_2_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage8, v0); flatbuffers_uint16_assign_from_pe(&p->voltage9, v1); flatbuffers_uint16_assign_from_pe(&p->voltage10, v2); flatbuffers_uint16_assign_from_pe(&p->voltage11, v3);
  return p; }
static inline VOLTAGES_CB5_2_t *VOLTAGES_CB5_2_copy_from_pe(VOLTAGES_CB5_2_t *p, const VOLTAGES_CB5_2_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage8, &p2->voltage8); flatbuffers_uint16_copy_from_pe(&p->voltage9, &p2->voltage9); flatbuffers_uint16_copy_from_pe(&p->voltage10, &p2->voltage10); flatbuffers_uint16_copy_from_pe(&p->voltage11, &p2->voltage11);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB5_2, 8, 2, VOLTAGES_CB5_2_file_identifier, VOLTAGES_CB5_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB5_2, VOLTAGES_CB5_2_t)

#define __VOLTAGES_CB5_3_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB5_3_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_assign(VOLTAGES_CB5_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage12 = v0; p->voltage13 = v1; p->voltage14 = v2; p->voltage15 = v3;
  return p; }
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_copy(VOLTAGES_CB5_3_t *p, const VOLTAGES_CB5_3_t *p2)
{ p->voltage12 = p2->voltage12; p->voltage13 = p2->voltage13; p->voltage14 = p2->voltage14; p->voltage15 = p2->voltage15;
  return p; }
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_assign_to_pe(VOLTAGES_CB5_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage12, v0); flatbuffers_uint16_assign_to_pe(&p->voltage13, v1); flatbuffers_uint16_assign_to_pe(&p->voltage14, v2); flatbuffers_uint16_assign_to_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_copy_to_pe(VOLTAGES_CB5_3_t *p, const VOLTAGES_CB5_3_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_to_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_to_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_to_pe(&p->voltage15, &p2->voltage15);
  return p; }
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_assign_from_pe(VOLTAGES_CB5_3_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage12, v0); flatbuffers_uint16_assign_from_pe(&p->voltage13, v1); flatbuffers_uint16_assign_from_pe(&p->voltage14, v2); flatbuffers_uint16_assign_from_pe(&p->voltage15, v3);
  return p; }
static inline VOLTAGES_CB5_3_t *VOLTAGES_CB5_3_copy_from_pe(VOLTAGES_CB5_3_t *p, const VOLTAGES_CB5_3_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage12, &p2->voltage12); flatbuffers_uint16_copy_from_pe(&p->voltage13, &p2->voltage13); flatbuffers_uint16_copy_from_pe(&p->voltage14, &p2->voltage14); flatbuffers_uint16_copy_from_pe(&p->voltage15, &p2->voltage15);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB5_3, 8, 2, VOLTAGES_CB5_3_file_identifier, VOLTAGES_CB5_3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB5_3, VOLTAGES_CB5_3_t)

#define __VOLTAGES_CB5_4_formal_args , uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3
#define __VOLTAGES_CB5_4_call_args , v0, v1, v2, v3
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_assign(VOLTAGES_CB5_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ p->voltage16 = v0; p->voltage17 = v1; p->max_voltage = v2; p->min_voltage = v3;
  return p; }
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_copy(VOLTAGES_CB5_4_t *p, const VOLTAGES_CB5_4_t *p2)
{ p->voltage16 = p2->voltage16; p->voltage17 = p2->voltage17; p->max_voltage = p2->max_voltage; p->min_voltage = p2->min_voltage;
  return p; }
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_assign_to_pe(VOLTAGES_CB5_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_to_pe(&p->voltage16, v0); flatbuffers_uint16_assign_to_pe(&p->voltage17, v1); flatbuffers_uint16_assign_to_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_to_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_copy_to_pe(VOLTAGES_CB5_4_t *p, const VOLTAGES_CB5_4_t *p2)
{ flatbuffers_uint16_copy_to_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_to_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_to_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_to_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_assign_from_pe(VOLTAGES_CB5_4_t *p, uint16_t v0, uint16_t v1, uint16_t v2, uint16_t v3)
{ flatbuffers_uint16_assign_from_pe(&p->voltage16, v0); flatbuffers_uint16_assign_from_pe(&p->voltage17, v1); flatbuffers_uint16_assign_from_pe(&p->max_voltage, v2); flatbuffers_uint16_assign_from_pe(&p->min_voltage, v3);
  return p; }
static inline VOLTAGES_CB5_4_t *VOLTAGES_CB5_4_copy_from_pe(VOLTAGES_CB5_4_t *p, const VOLTAGES_CB5_4_t *p2)
{ flatbuffers_uint16_copy_from_pe(&p->voltage16, &p2->voltage16); flatbuffers_uint16_copy_from_pe(&p->voltage17, &p2->voltage17); flatbuffers_uint16_copy_from_pe(&p->max_voltage, &p2->max_voltage); flatbuffers_uint16_copy_from_pe(&p->min_voltage, &p2->min_voltage);
  return p; }
__flatbuffers_build_struct(flatbuffers_, VOLTAGES_CB5_4, 8, 2, VOLTAGES_CB5_4_file_identifier, VOLTAGES_CB5_4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, VOLTAGES_CB5_4, VOLTAGES_CB5_4_t)

#define __TEMPERATURES_CB5_0_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB5_0_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_assign(TEMPERATURES_CB5_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_copy(TEMPERATURES_CB5_0_t *p, const TEMPERATURES_CB5_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_assign_to_pe(TEMPERATURES_CB5_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_copy_to_pe(TEMPERATURES_CB5_0_t *p, const TEMPERATURES_CB5_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_assign_from_pe(TEMPERATURES_CB5_0_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature0 = v0; p->temperature1 = v1; p->temperature2 = v2; p->temperature3 = v3;
  p->temperature4 = v4; p->temperature5 = v5; p->temperature6 = v6; p->temperature7 = v7;
  return p; }
static inline TEMPERATURES_CB5_0_t *TEMPERATURES_CB5_0_copy_from_pe(TEMPERATURES_CB5_0_t *p, const TEMPERATURES_CB5_0_t *p2)
{ p->temperature0 = p2->temperature0; p->temperature1 = p2->temperature1; p->temperature2 = p2->temperature2; p->temperature3 = p2->temperature3;
  p->temperature4 = p2->temperature4; p->temperature5 = p2->temperature5; p->temperature6 = p2->temperature6; p->temperature7 = p2->temperature7;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB5_0, 8, 1, TEMPERATURES_CB5_0_file_identifier, TEMPERATURES_CB5_0_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB5_0, TEMPERATURES_CB5_0_t)

#define __TEMPERATURES_CB5_1_formal_args ,\
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7
#define __TEMPERATURES_CB5_1_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_assign(TEMPERATURES_CB5_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_copy(TEMPERATURES_CB5_1_t *p, const TEMPERATURES_CB5_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_assign_to_pe(TEMPERATURES_CB5_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_copy_to_pe(TEMPERATURES_CB5_1_t *p, const TEMPERATURES_CB5_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_assign_from_pe(TEMPERATURES_CB5_1_t *p,
  uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3,
  uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7)
{ p->temperature8 = v0; p->temperature9 = v1; p->temperature10 = v2; p->temperature11 = v3;
  p->temperature12 = v4; p->temperature13 = v5; p->temperature14 = v6; p->temperature15 = v7;
  return p; }
static inline TEMPERATURES_CB5_1_t *TEMPERATURES_CB5_1_copy_from_pe(TEMPERATURES_CB5_1_t *p, const TEMPERATURES_CB5_1_t *p2)
{ p->temperature8 = p2->temperature8; p->temperature9 = p2->temperature9; p->temperature10 = p2->temperature10; p->temperature11 = p2->temperature11;
  p->temperature12 = p2->temperature12; p->temperature13 = p2->temperature13; p->temperature14 = p2->temperature14; p->temperature15 = p2->temperature15;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB5_1, 8, 1, TEMPERATURES_CB5_1_file_identifier, TEMPERATURES_CB5_1_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB5_1, TEMPERATURES_CB5_1_t)

#define __TEMPERATURES_CB5_2_formal_args , uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3
#define __TEMPERATURES_CB5_2_call_args , v0, v1, v2, v3
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_assign(TEMPERATURES_CB5_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_copy(TEMPERATURES_CB5_2_t *p, const TEMPERATURES_CB5_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_assign_to_pe(TEMPERATURES_CB5_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_copy_to_pe(TEMPERATURES_CB5_2_t *p, const TEMPERATURES_CB5_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_assign_from_pe(TEMPERATURES_CB5_2_t *p, uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3)
{ p->temperature16 = v0; p->temperature17 = v1; p->max_temperature = v2; p->min_temperature = v3;
  return p; }
static inline TEMPERATURES_CB5_2_t *TEMPERATURES_CB5_2_copy_from_pe(TEMPERATURES_CB5_2_t *p, const TEMPERATURES_CB5_2_t *p2)
{ p->temperature16 = p2->temperature16; p->temperature17 = p2->temperature17; p->max_temperature = p2->max_temperature; p->min_temperature = p2->min_temperature;
  return p; }
__flatbuffers_build_struct(flatbuffers_, TEMPERATURES_CB5_2, 4, 1, TEMPERATURES_CB5_2_file_identifier, TEMPERATURES_CB5_2_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, TEMPERATURES_CB5_2, TEMPERATURES_CB5_2_t)

#define __MASTER_SYNC_formal_args , uint32_t v0
#define __MASTER_SYNC_call_args , v0
static inline MASTER_SYNC_t *MASTER_SYNC_assign(MASTER_SYNC_t *p, uint32_t v0)
{ p->time = v0;
  return p; }
static inline MASTER_SYNC_t *MASTER_SYNC_copy(MASTER_SYNC_t *p, const MASTER_SYNC_t *p2)
{ p->time = p2->time;
  return p; }
static inline MASTER_SYNC_t *MASTER_SYNC_assign_to_pe(MASTER_SYNC_t *p, uint32_t v0)
{ flatbuffers_uint32_assign_to_pe(&p->time, v0);
  return p; }
static inline MASTER_SYNC_t *MASTER_SYNC_copy_to_pe(MASTER_SYNC_t *p, const MASTER_SYNC_t *p2)
{ flatbuffers_uint32_copy_to_pe(&p->time, &p2->time);
  return p; }
static inline MASTER_SYNC_t *MASTER_SYNC_assign_from_pe(MASTER_SYNC_t *p, uint32_t v0)
{ flatbuffers_uint32_assign_from_pe(&p->time, v0);
  return p; }
static inline MASTER_SYNC_t *MASTER_SYNC_copy_from_pe(MASTER_SYNC_t *p, const MASTER_SYNC_t *p2)
{ flatbuffers_uint32_copy_from_pe(&p->time, &p2->time);
  return p; }
__flatbuffers_build_struct(flatbuffers_, MASTER_SYNC, 4, 4, MASTER_SYNC_file_identifier, MASTER_SYNC_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, MASTER_SYNC, MASTER_SYNC_t)

#define __CELLBOARD_TOKEN_formal_args , uint8_t v0, uint32_t v1
#define __CELLBOARD_TOKEN_call_args , v0, v1
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_assign(CELLBOARD_TOKEN_t *p, uint8_t v0, uint32_t v1)
{ p->sender_cellboard = v0; p->time = v1;
  return p; }
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_copy(CELLBOARD_TOKEN_t *p, const CELLBOARD_TOKEN_t *p2)
{ p->sender_cellboard = p2->sender_cellboard; p->time = p2->time;
  return p; }
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_assign_to_pe(CELLBOARD_TOKEN_t *p, uint8_t v0, uint32_t v1)
{ p->sender_cellboard = v0; flatbuffers_uint32_assign_to_pe(&p->time, v1);
  return p; }
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_copy_to_pe(CELLBOARD_TOKEN_t *p, const CELLBOARD_TOKEN_t *p2)
{ p->sender_cellboard = p2->sender_cellboard; flatbuffers_uint32_copy_to_pe(&p->time, &p2->time);
  return p; }
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_assign_from_pe(CELLBOARD_TOKEN_t *p, uint8_t v0, uint32_t v1)
{ p->sender_cellboard = v0; flatbuffers_uint32_assign_from_pe(&p->time, v1);
  return p; }
static inline CELLBOARD_TOKEN_t *CELLBOARD_TOKEN_copy_from_pe(CELLBOARD_TOKEN_t *p, const CELLBOARD_TOKEN_t *p2)
{ p->sender_cellboard = p2->sender_cellboard; flatbuffers_uint32_copy_from_pe(&p->time, &p2->time);
  return p; }
__flatbuffers_build_struct(flatbuffers_, CELLBOARD_TOKEN, 8, 4, CELLBOARD_TOKEN_file_identifier, CELLBOARD_TOKEN_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, CELLBOARD_TOKEN, CELLBOARD_TOKEN_t)

#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_BUILDER_H */
